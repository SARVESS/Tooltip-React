{"version":3,"sources":["Dropdown.js","ToolTip.js","App.js","index.js"],"names":["Dropdown","props","dropdown","onSelectDirection","className","id","name","ref","onChange","value","styles","top","toolTipText","visibility","bottom","left","marginLeft","toolTipArrow","position","borderWidth","borderStyle","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","right","Tooltip","onMouseIn","onMouseOut","hover","direction","onMouseOver","style","App","handleSelectDirection","console","log","setState","current","handleMouseIn","handleMouseOut","state","React","createRef","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b5dc149d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n// Dropdown Component to select direction\r\nconst Dropdown = (props) => {\r\n  const { dropdown, onSelectDirection } = props;\r\n  return (\r\n    <div className=\"dropdown-div\">\r\n      <label id=\"label\">Choose a direction:</label>\r\n\r\n      <select\r\n        name=\"directions\"\r\n        id=\"direction\"\r\n        className=\"drop-down\"\r\n        ref={dropdown}\r\n        onChange={() => onSelectDirection()}\r\n      >\r\n        <option value=\"top\">Top</option>\r\n        <option value=\"bottom\">Bottom</option>\r\n        <option value=\"left\">Left</option>\r\n        <option value=\"right\">Right</option>\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dropdown;\r\n","import React from 'react';\r\n\r\nconst Tooltip = (props) => {\r\n  const { onMouseIn, onMouseOut, hover, direction } = props;\r\n\r\n  // giving position to tooltip according to direction\r\n  let position = \"\";\r\n  if (direction === 'top') {\r\n    position = styles.top;\r\n  } else if (direction === 'bottom') {\r\n    position = styles.bottom;\r\n  } else if (direction === 'left') {\r\n    position = styles.left;\r\n  } else if (direction === 'right') {\r\n    position = styles.right;\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"tooltip\"\r\n      onMouseOver={() => onMouseIn()}\r\n      onMouseOut={() => onMouseOut()}\r\n    >\r\n      Hover over me\r\n      {hover && (\r\n        <div>\r\n          <span className=\"tooltiptext\" style={position.toolTipText}>\r\n            Tooltip on {direction}\r\n          </span>\r\n          <div className=\"tootltiparrow\" style={position.toolTipArrow}></div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Inline styles for tooltip on hovering\r\nconst styles = {\r\n  top: {\r\n    toolTipText: {\r\n      visibility: 'visible',\r\n      bottom: '130%',\r\n      left: '40%',\r\n      marginLeft: '-60px',\r\n    },\r\n    toolTipArrow: {\r\n      position: \"absolute\",\r\n      top:\"-30%\",\r\n      left: \"50%\",\r\n      marginLeft: \"-5px\",\r\n      borderWidth: \"5px\",\r\n      borderStyle: \"solid\",\r\n      borderTopColor:\"black\",\r\n      borderRightColor:\"transparent\",\r\n      borderBottomColor:\"transparent\",\r\n      borderLeftColor:\"transparent\"\r\n    }\r\n  },\r\n\r\n  bottom: {\r\n    toolTipText: {\r\n      visibility: 'visible',\r\n      top: '130%',\r\n      left: '40%',\r\n      marginLeft: '-60px',\r\n    },\r\n    toolTipArrow: {\r\n      position: \"absolute\",\r\n      bottom:\"-30%\",\r\n      left: \"50%\",\r\n      marginLeft: \"-5px\",\r\n      borderWidth: \"5px\",\r\n      borderStyle: \"solid\",\r\n      borderTopColor:\"transparent\",\r\n      borderRightColor:\"transparent\",\r\n      borderBottomColor:\"black\",\r\n      borderLeftColor:\"transparent\"\r\n    }\r\n  },\r\n\r\n  left: {\r\n    toolTipText: {\r\n      visibility: 'visible',\r\n      top: '3px',\r\n      right: '106%',\r\n    },\r\n    toolTipArrow: {\r\n      position: \"absolute\",\r\n      top:\"35%\",\r\n      right:\"99.6%\",\r\n      marginLeft: \"-5px\",\r\n      borderWidth: \"5px\",\r\n      borderStyle: \"solid\",\r\n      borderTopColor:\"transparent\",\r\n      borderRightColor:\"transparent\",\r\n      borderBottomColor:\"transparent\",\r\n      borderLeftColor:\"black\"\r\n    }\r\n  },\r\n\r\n  right: {\r\n    toolTipText: {\r\n      visibility: 'visible',\r\n      top: '3px',\r\n      left: '106%',\r\n    },\r\n    toolTipArrow: {\r\n      position: \"absolute\",\r\n      top:\"35%\",\r\n      left: \"102.6%\",\r\n      marginLeft: \"-5px\",\r\n      borderWidth: \"5px\",\r\n      borderStyle: \"solid\",\r\n      borderTopColor:\"transparent\",\r\n      borderRightColor:\"black\",\r\n      borderBottomColor:\"transparent\",\r\n      borderLeftColor:\"transparent\"\r\n    }\r\n  },\r\n};\r\n\r\nexport default Tooltip;\r\n","import React from 'react';\nimport Dropdown from './Dropdown';\nimport Tooltip from './ToolTip';\n\n//  App as Class Component\nclass App extends React.Component {\n  constructor() {\n    super();\n    // state to get direction and hover results\n    this.state = {\n      hover: false,\n      direction: 'top',\n    };\n\n    // refrence to dropdown\n    this.dropdown = React.createRef();\n  }\n\n  // function to change direction state according to dropdown value\n  handleSelectDirection = () => {\n    console.log('direction changed');\n    this.setState({\n      direction: this.dropdown.current.value\n    })\n  }\n\n  // functions to change hover state \n  handleMouseIn = () => {\n    console.log('hovered in');\n    this.setState({ hover: true });\n  };\n\n  handleMouseOut = () => {\n    console.log('hovered out');\n    this.setState({ hover: false });\n  };\n\n  render() {\n    const { direction, hover } = this.state;\n    return (\n      <div className=\"App\">\n        <h1 id=\"heading\"> The ToolTip</h1>\n        <Dropdown\n          dropdown={this.dropdown}\n          onSelectDirection={this.handleSelectDirection}\n        />\n        <Tooltip\n          direction={direction}\n          hover={hover}\n          onMouseIn={this.handleMouseIn}\n          onMouseOut={this.handleMouseOut}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}